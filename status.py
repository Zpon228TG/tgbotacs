import requests
import telebot
from telebot import types
import time
import os
import json

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –≤–∞—à Telegram ID
TOKEN = '7359279162:AAGjFuIZaCxp1TvsY8vVyw5ryah3vTPXTm4'
ADMIN_ID = 6578018656

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥—ã
def check_bot_status(bot_token):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–º—É –±–æ—Ç—É
        test_message = {"chat_id": ADMIN_ID, "text": "/start"}
        response = requests.post(f'https://api.telegram.org/bot{bot_token}/sendMessage', data=test_message)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–¥–∞–ª–æ—Å—å –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        if response.status_code == 200 and response.json().get("ok"):
            return 'online'
        else:
            return 'offline'
    except requests.RequestException:
        return 'offline'

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_online = types.KeyboardButton("üü¢ –ë–æ—Ç—ã –æ–Ω–ª–∞–π–Ω")
    btn_offline = types.KeyboardButton("üî¥ –ë–æ—Ç—ã –æ—Ñ–ª–∞–π–Ω")
    btn_all = types.KeyboardButton("üîç –í—Å–µ –±–æ—Ç—ã")
    btn_add = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞")
    btn_remove = types.KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞")
    markup.add(btn_online, btn_offline, btn_all, btn_add, btn_remove)
    return markup

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.from_user.id != ADMIN_ID:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–æ—Ç –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    bot.reply_to(message, "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.message_handler(func=lambda message: True)
def menu_handler(message):
    if message.from_user.id != ADMIN_ID:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–æ—Ç –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    if message.text == "üü¢ –ë–æ—Ç—ã –æ–Ω–ª–∞–π–Ω":
        show_online_bots(message)
    elif message.text == "üî¥ –ë–æ—Ç—ã –æ—Ñ–ª–∞–π–Ω":
        show_offline_bots(message)
    elif message.text == "üîç –í—Å–µ –±–æ—Ç—ã":
        show_all_bots(message)
    elif message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞":
        add_bot(message)
    elif message.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞":
        remove_bot(message)
    else:
        bot.reply_to(message, "‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.", reply_markup=main_menu())

def show_online_bots(message):
    bots = load_data('bots.json')
    online_bots = [bot_token for bot_token, status in bots.items() if status == 'online']
    if not online_bots:
        bot.reply_to(message, "üü¢ –ù–µ—Ç –æ–Ω–ª–∞–π–Ω –±–æ—Ç–æ–≤.")
    else:
        bot.reply_to(message, "üü¢ –û–Ω–ª–∞–π–Ω –±–æ—Ç—ã:\n" + "\n".join(online_bots))

def show_offline_bots(message):
    bots = load_data('bots.json')
    offline_bots = [bot_token for bot_token, status in bots.items() if status == 'offline']
    if not offline_bots:
        bot.reply_to(message, "üî¥ –ù–µ—Ç –æ—Ñ—Ñ–ª–∞–π–Ω –±–æ—Ç–æ–≤.")
    else:
        bot.reply_to(message, "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω –±–æ—Ç—ã:\n" + "\n".join(offline_bots))

def show_all_bots(message):
    bots = load_data('bots.json')
    response = "\n".join([f"–¢–æ–∫–µ–Ω: {bot_token}, –°—Ç–∞—Ç—É—Å: {status}" for bot_token, status in bots.items()])
    bot.reply_to(message, response if response else "üîç –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤.")

def add_bot(message):
    msg = bot.reply_to(message, "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(msg, process_add_bot)

def process_add_bot(message):
    bot_token = message.text
    if not check_bot_status(bot_token):
        bot.reply_to(message, "‚ùå –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.")
        return

    bots = load_data('bots.json')
    bots[bot_token] = 'online'
    save_data('bots.json', bots)
    bot.reply_to(message, "‚úÖ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∏ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –æ–Ω–ª–∞–π–Ω.")

def remove_bot(message):
    msg = bot.reply_to(message, "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(msg, process_remove_bot)

def process_remove_bot(message):
    bot_token = message.text
    bots = load_data('bots.json')
    if bot_token in bots:
        del bots[bot_token]
        save_data('bots.json', bots)
        bot.reply_to(message, "‚úÖ –ë–æ—Ç —É–¥–∞–ª–µ–Ω.")
    else:
        bot.reply_to(message, "‚ùå –ë–æ—Ç —Å —Ç–∞–∫–∏–º —Ç–æ–∫–µ–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def load_data(filename):
    if not os.path.exists(filename):
        return {}
    with open(filename, 'r') as file:
        try:
            return json.load(file)
        except json.JSONDecodeError:
            return {}  # –ï—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å

def save_data(filename, data):
    with open(filename, 'w') as file:
        json.dump(data, file, indent=4)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
while True:
    try:
        bot.polling(none_stop=True, timeout=60, long_polling_timeout=60)
    except Exception as e:
        error_message = f"–û—à–∏–±–∫–∞: {e}"
        print(error_message)
        try:
            bot.send_message(ADMIN_ID, error_message)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        except Exception as send_error:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_error}")
        time.sleep(15)
