import telebot
from telebot import types
import requests
import json
import os
import time

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7231579579:AAHAIYua8pOsNGkUGKxp6zK_JIB0pkq9PAA'
ADMIN_ID = 6578018656

bot = telebot.TeleBot(TOKEN)

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª bot_tokens.json, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if not os.path.exists('bot_tokens.json'):
    with open('bot_tokens.json', 'w') as file:
        json.dump([], file)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
def check_bot_status(bot_token):
    url = f'https://api.telegram.org/bot{bot_token}/getMe'
    try:
        response = requests.get(url)
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info['ok']:
                return bot_info['result']['username'], 'üü¢ –û–Ω–ª–∞–π–Ω'
        return None, 'üî¥ –û—Ñ–ª–∞–π–Ω'
    except:
        return None, 'üî¥ –û—Ñ–ª–∞–π–Ω'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def restart_bot():
    bot.send_message(ADMIN_ID, "‚ö†Ô∏è –ë–æ—Ç –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è...")
    time.sleep(3)
    try:
        bot.polling(none_stop=True)
        bot.send_message(ADMIN_ID, "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        bot.send_message(ADMIN_ID, f"‚ùå –ë–æ—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å. –û—à–∏–±–∫–∞: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message):
    if message.from_user.id == ADMIN_ID:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üü¢ –ë–æ—Ç—ã –æ–Ω–ª–∞–π–Ω")
        btn2 = types.KeyboardButton("üî¥ –ë–æ—Ç—ã –æ—Ñ—Ñ–ª–∞–π–Ω")
        btn3 = types.KeyboardButton("üìù –í—Å–µ –±–æ—Ç—ã")
        btn4 = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞")
        btn5 = types.KeyboardButton("‚ûñ –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞")
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.from_user.id != ADMIN_ID:
        return

    if message.text == "üü¢ –ë–æ—Ç—ã –æ–Ω–ª–∞–π–Ω":
        show_online_bots(message)

    elif message.text == "üî¥ –ë–æ—Ç—ã –æ—Ñ—Ñ–ª–∞–π–Ω":
        show_offline_bots(message)

    elif message.text == "üìù –í—Å–µ –±–æ—Ç—ã":
        show_all_bots(message)

    elif message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞":
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ.")
        bot.register_next_step_handler(message, add_bot_token)

    elif message.text == "‚ûñ –£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞":
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.")
        bot.register_next_step_handler(message, delete_bot_token)

def show_online_bots(message):
    online_bots = []
    offline_bots = []

    with open('bot_tokens.json', 'r') as file:
        bot_tokens = json.load(file)

    for bot_token in bot_tokens:
        username, status = check_bot_status(bot_token)
        if status == 'üü¢ –û–Ω–ª–∞–π–Ω':
            online_bots.append(f'@{username} - {status}')
        else:
            offline_bots.append(f'@{username if username else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"} - {status}')

    if online_bots:
        bot.send_message(message.chat.id, "\n".join(online_bots))
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –±–æ—Ç–æ–≤ –æ–Ω–ª–∞–π–Ω. üü¢")

def show_offline_bots(message):
    offline_bots = []

    with open('bot_tokens.json', 'r') as file:
        bot_tokens = json.load(file)

    for bot_token in bot_tokens:
        username, status = check_bot_status(bot_token)
        if status == 'üî¥ –û—Ñ–ª–∞–π–Ω':
            offline_bots.append(f'@{username if username else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"} - {status}')

    if offline_bots:
        bot.send_message(message.chat.id, "\n".join(offline_bots))
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –±–æ—Ç–æ–≤ –æ—Ñ—Ñ–ª–∞–π–Ω. üî¥")

def show_all_bots(message):
    all_bots = []

    with open('bot_tokens.json', 'r') as file:
        bot_tokens = json.load(file)

    for bot_token in bot_tokens:
        username, status = check_bot_status(bot_token)
        all_bots.append(f'@{username if username else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"} - {status}')

    if all_bots:
        bot.send_message(message.chat.id, "\n".join(all_bots))
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–æ—Ç–æ–≤. üìù")

def add_bot_token(message):
    bot_token = message.text

    with open('bot_tokens.json', 'r') as file:
        bot_tokens = json.load(file)

    if bot_token in bot_tokens:
        bot.send_message(message.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω.")
        return

    bot_tokens.append(bot_token)

    with open('bot_tokens.json', 'w') as file:
        json.dump(bot_tokens, file, indent=4)

    bot.send_message(message.chat.id, "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω. üü¢")

def delete_bot_token(message):
    bot_token = message.text

    with open('bot_tokens.json', 'r') as file:
        bot_tokens = json.load(file)

    if bot_token not in bot_tokens:
        bot.send_message(message.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    bot_tokens.remove(bot_token)

    with open('bot_tokens.json', 'w') as file:
        json.dump(bot_tokens, file, indent=4)

    bot.send_message(message.chat.id, "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω. ‚ûñ")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        bot.send_message(ADMIN_ID, "‚ö†Ô∏è –ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è. –ü—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å...")
        time.sleep(5)  # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º
        try:
            bot.polling(none_stop=True)
            bot.send_message(ADMIN_ID, "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
        except Exception as e:
            bot.send_message(ADMIN_ID, f"‚ùå –ë–æ—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å. –û—à–∏–±–∫–∞: {e}")
            break
