import requests
import json
import time
import os
import random
import string
from telebot import TeleBot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = '7426380650:AAEkJp4_EF4h8ZvLxBbNNWT8xXg7jRQ02n0'
CHAT_ID = '7412395676'
FILE_PATH = 'emails.txt'
MAX_FILE_SIZE_MB = 9
API_BASE_URL = 'https://api.mail.tm'
REQUEST_LIMIT = 10  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ –æ–∂–∏–¥–∞–Ω–∏—è
WAIT_TIME = 60      # –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ 429 (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
MIN_WAIT_TIME = 10  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
MAX_WAIT_TIME = 25  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = TeleBot(TELEGRAM_BOT_TOKEN)

def generate_password(length=12):
    characters = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(characters) for _ in range(length))

def generate_email(domain):
    username = ''.join(random.choices(string.ascii_letters + string.digits, k=10))
    return f'{username}@{domain}'

def get_domains():
    try:
        response = requests.get(f'{API_BASE_URL}/domains')
        response.raise_for_status()
        domains = response.json()["hydra:member"]
        return [domain["domain"] for domain in domains]
    except requests.exceptions.HTTPError as e:
        bot.send_message(CHAT_ID, f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–æ–≤: {e}")
        return []

def create_account_and_get_token(domain):
    email = generate_email(domain)
    password = generate_password()
    account_data = {
        "address": email,
        "password": password
    }
    
    try:
        response = requests.post(f'{API_BASE_URL}/accounts', json=account_data)
        if response.status_code == 429:
            bot.send_message(CHAT_ID, "üö® –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –¥–µ–ª–∞–µ–º –ø–∞—É–∑—É...")
            time.sleep(WAIT_TIME)
            return None, None, None
        
        response.raise_for_status()
        account_info = response.json()
        account_id = account_info.get('id')
        
        token_data = {
            "address": email,
            "password": password
        }
        response = requests.post(f'{API_BASE_URL}/token', json=token_data)
        if response.status_code == 429:
            bot.send_message(CHAT_ID, "üö® –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –¥–µ–ª–∞–µ–º –ø–∞—É–∑—É...")
            time.sleep(WAIT_TIME)
            return None, None, None
        
        response.raise_for_status()
        token_info = response.json()
        token = token_info.get('token')
        
        if not token:
            bot.send_message(CHAT_ID, f"üö® –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ—á—Ç—ã {email}.")
            return None, None, None
        
        return email, password, token
    except requests.exceptions.RequestException as e:
        bot.send_message(CHAT_ID, f"üö® –û—à–∏–±–∫–∞: {e}")
        return None, None, None

def write_to_file(data):
    with open(FILE_PATH, 'a') as file:
        file.write(data + '\n')

def send_file_via_telegram(file_path):
    with open(file_path, 'rb') as file:
        bot.send_document(CHAT_ID, file)

def check_file_size_and_send():
    file_size_mb = os.path.getsize(FILE_PATH) / (1024 * 1024)
    if file_size_mb >= MAX_FILE_SIZE_MB:
        bot.send_message(CHAT_ID, "üìÇ #–ø–æ—á—Ç—ã")
        send_file_via_telegram(FILE_PATH)
        os.remove(FILE_PATH)

def main():
    domains = get_domains()
    if not domains:
        bot.send_message(CHAT_ID, "üö® –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ–º–µ–Ω—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return

    count = 0
    request_count = 0

    while True:
        try:
            if count % 25 == 0 and count > 0:
                file_size = os.path.getsize(FILE_PATH) / (1024 * 1024)
                total_emails = count
                bot.send_message(CHAT_ID, f"üåü –í–∑—è—Ç–æ {total_emails} –ø–æ—á—Ç. –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.2f} MB üìÅ")

            domain = random.choice(domains)
            email, password, token = create_account_and_get_token(domain)
            if not email or not password or not token:
                continue
            write_to_file(f'{email}:{password}:{token}')

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
            print(f"–°–æ–∑–¥–∞–Ω–∞ –ø–æ—á—Ç–∞: {email}")
            print(f"–ü–∞—Ä–æ–ª—å: {password}")
            print(f"–¢–æ–∫–µ–Ω: {token}")

            count += 1
            request_count += 1

            # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç–æ–π –∑–∞–ø—Ä–æ—Å–æ–≤
            if request_count >= REQUEST_LIMIT:
                bot.send_message(CHAT_ID, "‚è≥ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –¥–µ–ª–∞–µ–º –ø–∞—É–∑—É...")
                time.sleep(WAIT_TIME)  # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
                request_count = 0

            check_file_size_and_send()

            # –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç 10 –¥–æ 25 —Å–µ–∫—É–Ω–¥
            time.sleep(random.uniform(MIN_WAIT_TIME, MAX_WAIT_TIME))

        except requests.exceptions.RequestException as e:
            bot.send_message(CHAT_ID, f"üö® –û—à–∏–±–∫–∞: {e}")
            time.sleep(5)  # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

if __name__ == '__main__':
    main()
