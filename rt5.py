import telebot
import json
from datetime import datetime, timedelta

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = "7053322665:AAFe3nW8Ls3oThVaA1gDXCq7biaaolWe7IA"
bot = telebot.TeleBot(TOKEN)

# –û—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
MAIN_ADMIN_ID = 750334025  # –í–∞—à Telegram ID

# –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
ALLOWED_USERS_FILE = "allowed_users.json"
MODERATORS_FILE = "moderators.json"
SCHEDULE_FILE = "schedule.json"
EVENTS_FILE = "events.json"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
allowed_users = []
moderators = []
schedule = []
events = []

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–æ–≤
def load_json(filename):
    try:
        with open(filename, 'r', encoding='utf-8') as file:
            return json.load(file)
    except FileNotFoundError:
        return []

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–∞–π–ª—ã
def save_json(filename, data):
    with open(filename, 'w', encoding='utf-8') as file:
        json.dump(data, file, ensure_ascii=False, indent=4)

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
allowed_users = load_json(ALLOWED_USERS_FILE)
moderators = load_json(MODERATORS_FILE)
schedule = load_json(SCHEDULE_FILE)
events = load_json(EVENTS_FILE)

# –ú–µ–Ω—é
def main_menu(chat_id):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üéÇ –ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∏", "üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    markup.add("üéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", "üë• –°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã")
    if chat_id == MAIN_ADMIN_ID or chat_id in moderators:
        markup.add("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")
    if chat_id == MAIN_ADMIN_ID:
        markup.add("‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø", "‚ûñ –£–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É
def create_new_week_schedule():
    global schedule
    today = datetime.now()
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–±–±–æ—Ç—ã —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏
    week_start = today - timedelta(days=today.weekday())
    saturday = week_start + timedelta(days=5)  # –°—É–±–±–æ—Ç–∞
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Å—É–±–±–æ—Ç–∞ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —Å–±—Ä–æ—à–µ–Ω–æ
    if today > saturday and schedule:
        schedule = []
        save_json(SCHEDULE_FILE, schedule)
        print("–°—Ç–∞—Ä–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
@bot.message_handler(func=lambda message: message.text == "üéÇ –ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∏")
def send_birthday_image(message):
    if message.chat.id in allowed_users:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        current_month = datetime.now().strftime("%B").lower()  # 'january', 'february', –∏ —Ç.–¥.
        
        # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
        image_path = f"images/{current_month}.jpg"
        
        try:
            with open(image_path, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=f"üéâ –ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∏ –≤ {current_month.capitalize()}")
        except FileNotFoundError:
            bot.send_message(message.chat.id, f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ –≤ {current_month.capitalize()} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üö´")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ üö´")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø")
def add_user(message):
    if message.chat.id == MAIN_ADMIN_ID or message.chat.id in moderators:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
        bot.register_next_step_handler(msg, process_add_user)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üö´")

def process_add_user(message):
    try:
        user_id = int(message.text)
        if user_id in allowed_users:
            bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø ‚úÖ")
        else:
            allowed_users.append(user_id)
            save_json(ALLOWED_USERS_FILE, allowed_users)
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ")
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID üö´")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.text == "‚ûñ –£–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø")
def remove_user(message):
    if message.chat.id == MAIN_ADMIN_ID or message.chat.id in moderators:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
        bot.register_next_step_handler(msg, process_remove_user)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üö´")

def process_remove_user(message):
    try:
        user_id = int(message.text)
        if user_id in allowed_users:
            allowed_users.remove(user_id)
            save_json(ALLOWED_USERS_FILE, allowed_users)
            bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–¥–∞–ª–µ–Ω ‚ùå")
        else:
            bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ üö´")
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID üö´")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
def add_moderator(message):
    if message.chat.id == MAIN_ADMIN_ID:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        bot.register_next_step_handler(msg, process_add_moderator)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ üö´")

def process_add_moderator(message):
    try:
        user_id = int(message.text)
        if user_id in moderators:
            bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ‚úÖ")
        else:
            moderators.append(user_id)
            save_json(MODERATORS_FILE, moderators)
            bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ")
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID üö´")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
@bot.message_handler(func=lambda message: message.text == "üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
def view_schedule(message):
    if message.chat.id in allowed_users:
        create_new_week_schedule()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ —Å—É–±–±–æ—Ç–∞–º
        if schedule:
            schedule_list = "\n".join([f"{item['lesson']}: {item['teacher']}" for item in schedule])
            bot.send_message(message.chat.id, f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n{schedule_list}")
        else:
            bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ üö´")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è üö´")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º)
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
def add_schedule(message):
    if message.chat.id in moderators or message.chat.id == MAIN_ADMIN_ID:
        msg = bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ —É—Ä–æ–∫–æ–≤ –±—É–¥–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏?")
        bot.register_next_step_handler(msg, process_schedule_count)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ üö´")

def process_schedule_count(message):
    try:
        lesson_count = int(message.text)
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è {lesson_count} —É—Ä–æ–∫–æ–≤.")
        schedule.clear()  # –û—á–∏—â–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ
        save_json(SCHEDULE_FILE, schedule)
        for i in range(lesson_count):
            msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞ {i + 1}:")
            bot.register_next_step_handler(msg, process_schedule_lesson, i)
    except ValueError:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–∫–æ–≤ üö´")

def process_schedule_lesson(message, index):
    lesson = message.text
    msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è —É—Ä–æ–∫–∞ {lesson}:")
    bot.register_next_step_handler(msg, process_schedule_teacher, index, lesson)

def process_schedule_teacher(message, index, lesson):
    teacher = message.text
    schedule.append({'lesson': lesson, 'teacher': teacher})
    save_json(SCHEDULE_FILE, schedule)
    if index == len(schedule) - 1:
        bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
